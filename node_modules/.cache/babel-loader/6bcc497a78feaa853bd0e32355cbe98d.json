{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sumit\\\\Downloads\\\\01 FoodApp\\\\src\\\\component\\\\meals\\\\AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport classes from \"./AvailableMeals.module.css\";\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\"; // const DUMMY_MEALS = [\n//   {\n//     id: \"m1\",\n//     name: \"Sushi\",\n//     description: \"Finest fish and veggies\",\n//     price: 22.99,\n//   },\n//   {\n//     id: \"m2\",\n//     name: \"Schnitzel\",\n//     description: \"A german specialty!\",\n//     price: 16.5,\n//   },\n//   {\n//     id: \"m3\",\n//     name: \"Barbecue Burger\",\n//     description: \"American, raw, meaty\",\n//     price: 12.99,\n//   },\n//   {\n//     id: \"m4\",\n//     name: \"Green Bowl\",\n//     description: \"Healthy...and green...\",\n//     price: 18.99,\n//   },\n// ];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeal = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch(\"https://react-http-ab781-default-rtdb.firebaseio.com/\").then();\n      const responseData = await response.json();\n      const loadMeals = [];\n\n      for (let key in responseData) {\n        loadMeals.push({\n          id: key,\n          name: responseData[key].name,\n          describe: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n\n      setMeals(loadMeals);\n      setIsLoading(false);\n    };\n\n    fetchMeals();\n  }, []);\n\n  if (isLoading) {\n    /*#__PURE__*/\n    _jsxDEV(\"section\", {\n      className: classes.mealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this);\n  }\n\n  const mealList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeal, \"Opmz/k+5zTZAoo/mes+3X6ZqQsM=\");\n\n_c = AvailableMeal;\nexport default AvailableMeal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeal\");","map":{"version":3,"names":["useEffect","useState","classes","Card","MealItem","AvailableMeal","meals","setMeals","isLoading","setIsLoading","fetchMeals","response","fetch","then","responseData","json","loadMeals","key","push","id","name","describe","description","price","mealsLoading","mealList","map","meal"],"sources":["C:/Users/sumit/Downloads/01 FoodApp/src/component/meals/AvailableMeals.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport classes from \"./AvailableMeals.module.css\";\r\nimport Card from \"../UI/Card\";\r\nimport MealItem from \"./MealItem/MealItem\";\r\n\r\n// const DUMMY_MEALS = [\r\n//   {\r\n//     id: \"m1\",\r\n//     name: \"Sushi\",\r\n//     description: \"Finest fish and veggies\",\r\n//     price: 22.99,\r\n//   },\r\n//   {\r\n//     id: \"m2\",\r\n//     name: \"Schnitzel\",\r\n//     description: \"A german specialty!\",\r\n//     price: 16.5,\r\n//   },\r\n//   {\r\n//     id: \"m3\",\r\n//     name: \"Barbecue Burger\",\r\n//     description: \"American, raw, meaty\",\r\n//     price: 12.99,\r\n//   },\r\n//   {\r\n//     id: \"m4\",\r\n//     name: \"Green Bowl\",\r\n//     description: \"Healthy...and green...\",\r\n//     price: 18.99,\r\n//   },\r\n// ];\r\n\r\nconst AvailableMeal = () => {\r\n  const [meals, setMeals] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchMeals = async () => {\r\n      const response = await fetch(\r\n        \"https://react-http-ab781-default-rtdb.firebaseio.com/\"\r\n      ).then();\r\n\r\n      const responseData = await response.json();\r\n      const loadMeals = [];\r\n\r\n      for (let key in responseData) {\r\n        loadMeals.push({\r\n          id: key,\r\n          name: responseData[key].name,\r\n          describe: responseData[key].description,\r\n          price: responseData[key].price,\r\n        });\r\n      }\r\n      setMeals(loadMeals);\r\n      setIsLoading(false);\r\n    };\r\n\r\n    fetchMeals();\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    <section className={classes.mealsLoading}>\r\n      <p>Loading....</p>\r\n    </section>;\r\n  }\r\n\r\n  const mealList = meals.map((meal) => (\r\n    <MealItem\r\n      id={meal.id}\r\n      key={meal.id}\r\n      name={meal.name}\r\n      description={meal.description}\r\n      price={meal.price}\r\n    />\r\n  ));\r\n  return (\r\n    <section className={classes.meals}>\r\n      <Card>\r\n        <ul>{mealList}</ul>\r\n      </Card>\r\n    </section>\r\n  );\r\n};\r\nexport default AvailableMeal;\r\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,aAAa,GAAG,MAAM;EAAA;;EAC1B,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,IAAD,CAA1C;EAEAD,SAAS,CAAC,MAAM;IACd,MAAMU,UAAU,GAAG,YAAY;MAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,uDAD0B,CAAL,CAErBC,IAFqB,EAAvB;MAIA,MAAMC,YAAY,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAA3B;MACA,MAAMC,SAAS,GAAG,EAAlB;;MAEA,KAAK,IAAIC,GAAT,IAAgBH,YAAhB,EAA8B;QAC5BE,SAAS,CAACE,IAAV,CAAe;UACbC,EAAE,EAAEF,GADS;UAEbG,IAAI,EAAEN,YAAY,CAACG,GAAD,CAAZ,CAAkBG,IAFX;UAGbC,QAAQ,EAAEP,YAAY,CAACG,GAAD,CAAZ,CAAkBK,WAHf;UAIbC,KAAK,EAAET,YAAY,CAACG,GAAD,CAAZ,CAAkBM;QAJZ,CAAf;MAMD;;MACDhB,QAAQ,CAACS,SAAD,CAAR;MACAP,YAAY,CAAC,KAAD,CAAZ;IACD,CAlBD;;IAoBAC,UAAU;EACX,CAtBQ,EAsBN,EAtBM,CAAT;;EAwBA,IAAIF,SAAJ,EAAe;IACb;IAAA;MAAS,SAAS,EAAEN,OAAO,CAACsB,YAA5B;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EAGD;;EAED,MAAMC,QAAQ,GAAGnB,KAAK,CAACoB,GAAN,CAAWC,IAAD,iBACzB,QAAC,QAAD;IACE,EAAE,EAAEA,IAAI,CAACR,EADX;IAGE,IAAI,EAAEQ,IAAI,CAACP,IAHb;IAIE,WAAW,EAAEO,IAAI,CAACL,WAJpB;IAKE,KAAK,EAAEK,IAAI,CAACJ;EALd,GAEOI,IAAI,CAACR,EAFZ;IAAA;IAAA;IAAA;EAAA,QADe,CAAjB;EASA,oBACE;IAAS,SAAS,EAAEjB,OAAO,CAACI,KAA5B;IAAA,uBACE,QAAC,IAAD;MAAA,uBACE;QAAA,UAAKmB;MAAL;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CAlDD;;GAAMpB,a;;KAAAA,a;AAmDN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}